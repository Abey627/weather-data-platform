version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - DJANGO_DEBUG=True
    command: >
      sh -c "python manage.py makemigrations --check &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    restart: unless-stopped

  # Frontend service will be uncommented once we implement it
  # frontend:
  #   build: 
  #     context: ./frontend
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   depends_on:
  #     - backend
  #   environment:
  #     - REACT_APP_API_URL=http://localhost:8000/api
  #   stdin_open: true
  #   restart: unless-stopped

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    
  # Add pgadmin for database management through GUI
  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - .env
    ports:
      - "5050:80"
    depends_on:
      - db
    restart: unless-stopped

volumes:
  postgres_data:
