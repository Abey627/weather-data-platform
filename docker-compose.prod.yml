version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - .env.prod
    environment:
      - DJANGO_DEBUG=False
      - DJANGO_SETTINGS_MODULE=weatherapi.settings
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - REDIS_URL=redis://redis:6379/0
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/weather/health/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Frontend service will be uncommented once we implement it
  # frontend:
  #   build: 
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:80"
  #   depends_on:
  #     - backend
  #   restart: always

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.prod
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  redis:
    image: redis:7-alpine
    restart: always

volumes:
  postgres_data:
