name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-lint:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: weather_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: change_this_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6379:6379
    env:
      DATABASE_NAME: weather_db
      DATABASE_USER: postgres
      DATABASE_PASSWORD: change_this_password
      DATABASE_HOST: localhost
      DATABASE_PORT: 5432
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      DJANGO_SECRET_KEY: test-secret-key
      DJANGO_DEBUG: False
      ALLOWED_HOSTS: localhost,127.0.0.1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 backend/
      - name: Run tests with pytest
        run: |
          pip install pytest
          pytest backend/
      - name: Build Docker image
        run: |
          docker build -f backend/Dockerfile -t weather-data-platform .
      - name: Deploy to Render (if build passes)
        if: github.ref == 'refs/heads/main' && success()
        run: |
          curl -X POST "$RENDER_DEPLOY_HOOK_URL"
        env:
          RENDER_DEPLOY_HOOK_URL: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
